name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (if using a Node.js project)
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm install
        
      - name: Run tests with TestProject
        run: npm test # Adjust based on your testing tool

  sonar:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run SonarQube Analysis
        uses: SonarSource/sonarqube-scan-action@v1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "http://sonarqube.example.com"
        with:
          projectKey: "your-project-key"
          sources: "src/"
          
  docker-build:
    needs: sonar
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t your-app:latest .
          docker tag your-app:latest your-dockerhub-username/your-app:latest
          
      - name: Push Docker image to DockerHub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push your-dockerhub-username/your-app:latest